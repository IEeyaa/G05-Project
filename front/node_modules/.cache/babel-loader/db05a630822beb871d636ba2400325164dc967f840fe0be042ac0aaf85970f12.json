{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { onBeforeMount, reactive, ref, toRefs, unref } from \"vue\";\nimport { useRouter } from \"vue-router\";\nimport { useStore } from \"vuex\";\nimport { login } from \"@/api/serviceApi\";\nimport { ElMessage } from \"element-plus\";\nimport VueImgVerify from \"@/components/VueImageVerify\";\nexport default {\n  setup() {\n    const router = useRouter();\n    const store = useStore();\n    const validateForm = ref(null);\n    const verifyRef = ref(null);\n    const state = reactive({\n      login: {\n        height: \"\",\n        backgroundImage: \"url(\" + require(\"@/assets/image/login_bj.png\") + \")\"\n      },\n      logoImg: require(\"@/assets/image/logo.png\"),\n      loginForm: {\n        username: \"\",\n        password: \"\",\n        imgCode: \"\"\n      }\n    });\n    const rules = {\n      username: [{\n        required: true,\n        message: \"用户名称不能为空\",\n        trigger: \"blur\"\n      }],\n      password: [{\n        required: true,\n        message: \"密码不能为空\",\n        trigger: \"blur\"\n      }],\n      imgCode: [{\n        required: true,\n        message: \"验证码不能为空\",\n        trigger: \"blur\"\n      }]\n    };\n    onBeforeMount(() => {\n      state.login.height = document.body.clientHeight + \"px\";\n    });\n    const submit = async () => {\n      const form = unref(validateForm);\n      if (!form) {\n        return;\n      }\n      await form.validate();\n\n      // 校验验证码\n      const _imgCode = verifyRef.value.imgCode || \"\";\n      if (_imgCode.toLowerCase() != state.loginForm.imgCode.toLowerCase()) {\n        ElMessage({\n          showClose: true,\n          message: \"验证码有误，请重新输入!\",\n          type: \"error\"\n        });\n        return;\n      }\n      console.log(state.loginForm);\n      login(state.loginForm).then(res => {\n        if (res.code === 200) {\n          // 登录成功后设置token到vuex中\n          localStorage.username = res.data.username;\n          store.commit(\"setToken\", res.data.token);\n          router.push({\n            path: \"home\"\n          });\n        } else {\n          ElMessage({\n            showClose: true,\n            message: res.data,\n            type: \"error\"\n          });\n        }\n      });\n    };\n    return {\n      ...toRefs(state),\n      rules,\n      validateForm,\n      verifyRef,\n      submit\n    };\n  },\n  components: {\n    VueImgVerify\n  }\n};","map":{"version":3,"mappings":"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","names":["onBeforeMount","reactive","ref","toRefs","unref","useRouter","useStore","login","ElMessage","VueImgVerify","setup","router","store","validateForm","verifyRef","state","height","backgroundImage","require","logoImg","loginForm","username","password","imgCode","rules","required","message","trigger","document","body","clientHeight","submit","form","validate","_imgCode","value","toLowerCase","showClose","type","console","log","then","res","code","localStorage","data","commit","token","push","path","components"],"sourceRoot":"","sources":["E:\\课程\\大三上\\软件工程管理\\Code\\G05-Project\\front\\src\\views\\LoginView.vue"],"sourcesContent":["<template>\r\n  <div class=\"login\" :style=\"login\">\r\n    <el-row :gutter=\"10\" class=\"login-container\">\r\n      <el-form\r\n        :model=\"loginForm\"\r\n        :rules=\"rules\"\r\n        ref=\"validateForm\"\r\n        label-width=\"1em\"\r\n        class=\"login-body\"\r\n        hide-required-asterisk=\"false\"\r\n      >\r\n        <el-image class=\"login-logo\" :src=\"logoImg\"></el-image>\r\n        <el-form-item prop=\"username\">\r\n          <el-input\r\n            v-model=\"loginForm.username\"\r\n            prefix-icon=\"el-icon-user\"\r\n            placeholder=\"请输入用户名称\"\r\n          ></el-input>\r\n        </el-form-item>\r\n        <el-form-item prop=\"password\">\r\n          <el-input\r\n            type=\"password\"\r\n            v-model=\"loginForm.password\"\r\n            prefix-icon=\"el-icon-lock\"\r\n            show-password\r\n            placeholder=\"请输入密码\"\r\n          ></el-input>\r\n        </el-form-item>\r\n        <el-form-item prop=\"imgCode\">\r\n          <el-row>\r\n            <el-col :span=\"14\">\r\n              <el-input\r\n                v-model=\"loginForm.imgCode\"\r\n                prefix-icon=\"el-icon-message\"\r\n                placeholder=\"请输入验证码\"\r\n              ></el-input>\r\n            </el-col>\r\n            <el-col :span=\"9\" :offset=\"1\">\r\n              <VueImgVerify ref=\"verifyRef\"></VueImgVerify>\r\n            </el-col>\r\n          </el-row>\r\n        </el-form-item>\r\n        <el-form-item>\r\n          <el-button type=\"text\">忘记密码？</el-button>\r\n        </el-form-item>\r\n        <el-form-item class=\"login-body-button\">\r\n          <el-button class=\"login-submit\" type=\"danger\" round @click=\"submit\"\r\n            >登录</el-button\r\n          >\r\n        </el-form-item>\r\n      </el-form>\r\n    </el-row>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { onBeforeMount, reactive, ref, toRefs, unref } from \"vue\";\r\nimport { useRouter } from \"vue-router\";\r\nimport { useStore } from \"vuex\";\r\nimport { login } from \"@/api/serviceApi\";\r\nimport { ElMessage } from \"element-plus\";\r\nimport VueImgVerify from \"@/components/VueImageVerify\";\r\n\r\nexport default {\r\n  setup() {\r\n    const router = useRouter();\r\n    const store = useStore();\r\n    const validateForm = ref(null);\r\n    const verifyRef = ref(null);\r\n    const state = reactive({\r\n      login: {\r\n        height: \"\",\r\n        backgroundImage: \"url(\" + require(\"@/assets/image/login_bj.png\") + \")\",\r\n      },\r\n      logoImg: require(\"@/assets/image/logo.png\"),\r\n      loginForm: {\r\n        username: \"\",\r\n        password: \"\",\r\n        imgCode: \"\",\r\n      },\r\n    });\r\n\r\n    const rules = {\r\n      username: [\r\n        { required: true, message: \"用户名称不能为空\", trigger: \"blur\" },\r\n      ],\r\n      password: [{ required: true, message: \"密码不能为空\", trigger: \"blur\" }],\r\n      imgCode: [{ required: true, message: \"验证码不能为空\", trigger: \"blur\" }],\r\n    };\r\n\r\n    onBeforeMount(() => {\r\n      state.login.height = document.body.clientHeight + \"px\";\r\n    });\r\n\r\n    const submit = async () => {\r\n      const form = unref(validateForm);\r\n      if (!form) {\r\n        return;\r\n      }\r\n      await form.validate();\r\n\r\n      // 校验验证码\r\n      const _imgCode = verifyRef.value.imgCode || \"\";\r\n      if (_imgCode.toLowerCase() != state.loginForm.imgCode.toLowerCase()) {\r\n        ElMessage({\r\n          showClose: true,\r\n          message: \"验证码有误，请重新输入!\",\r\n          type: \"error\",\r\n        });\r\n        return;\r\n      }\r\n\r\n      console.log(state.loginForm);\r\n\r\n      login(state.loginForm).then((res) => {\r\n        if (res.code === 200) {\r\n          // 登录成功后设置token到vuex中\r\n          localStorage.username = res.data.username;\r\n          store.commit(\"setToken\", res.data.token);\r\n          router.push({ path: \"home\" });\r\n        } else {\r\n          ElMessage({ showClose: true, message: res.data, type: \"error\" });\r\n        }\r\n      });\r\n    };\r\n\r\n    return {\r\n      ...toRefs(state),\r\n      rules,\r\n      validateForm,\r\n      verifyRef,\r\n      submit,\r\n    };\r\n  },\r\n  components: {\r\n    VueImgVerify,\r\n  },\r\n};\r\n</script>\r\n\r\n<style lang=\"less\">\r\n.login {\r\n  background-size: cover;\r\n\r\n  .login-logo {\r\n    width: 120px;\r\n    height: 120px;\r\n    display: block;\r\n    margin: 2rem auto;\r\n  }\r\n\r\n  .login-container {\r\n    position: absolute;\r\n    left: 50%;\r\n    top: 50%;\r\n    transform: translate(-50%, -50%);\r\n    background: rgba(233, 233, 233, 0.3);\r\n    border-radius: 0.4rem;\r\n    border: 1px white solid;\r\n    padding: 0.8rem;\r\n  }\r\n\r\n  .login-body {\r\n    padding: 1rem 2rem;\r\n    background: rgba(233, 233, 233, 0.6);\r\n    width: 25rem;\r\n    border-radius: 0.2rem;\r\n  }\r\n\r\n  .el-input__inner {\r\n    border-radius: 20px;\r\n  }\r\n\r\n  .codeImg {\r\n    height: 40px;\r\n  }\r\n\r\n  .login-submit {\r\n    width: 100%;\r\n  }\r\n}\r\n</style>\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}