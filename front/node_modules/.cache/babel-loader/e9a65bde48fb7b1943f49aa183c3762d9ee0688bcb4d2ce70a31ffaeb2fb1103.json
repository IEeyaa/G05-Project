{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, withCtx as _withCtx, createTextVNode as _createTextVNode, normalizeStyle as _normalizeStyle, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_el_image = _resolveComponent(\"el-image\");\n  const _component_el_input = _resolveComponent(\"el-input\");\n  const _component_el_form_item = _resolveComponent(\"el-form-item\");\n  const _component_el_col = _resolveComponent(\"el-col\");\n  const _component_VueImgVerify = _resolveComponent(\"VueImgVerify\");\n  const _component_el_row = _resolveComponent(\"el-row\");\n  const _component_el_button = _resolveComponent(\"el-button\");\n  const _component_el_form = _resolveComponent(\"el-form\");\n  return _openBlock(), _createElementBlock(\"div\", {\n    class: \"login\",\n    style: _normalizeStyle(_ctx.login)\n  }, [_createVNode(_component_el_row, {\n    gutter: 10,\n    class: \"login-container\"\n  }, {\n    default: _withCtx(() => [_createVNode(_component_el_form, {\n      model: _ctx.loginForm,\n      rules: $setup.rules,\n      ref: \"validateForm\",\n      \"label-width\": \"1em\",\n      class: \"login-body\",\n      \"hide-required-asterisk\": \"false\"\n    }, {\n      default: _withCtx(() => [_createVNode(_component_el_image, {\n        class: \"login-logo\",\n        src: _ctx.logoImg\n      }, null, 8 /* PROPS */, [\"src\"]), _createVNode(_component_el_form_item, {\n        prop: \"username\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_el_input, {\n          modelValue: _ctx.loginForm.username,\n          \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => _ctx.loginForm.username = $event),\n          \"prefix-icon\": \"el-icon-user\",\n          placeholder: \"请输入用户名称\"\n        }, null, 8 /* PROPS */, [\"modelValue\"])]),\n        _: 1 /* STABLE */\n      }), _createVNode(_component_el_form_item, {\n        prop: \"password\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_el_input, {\n          type: \"password\",\n          modelValue: _ctx.loginForm.password,\n          \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => _ctx.loginForm.password = $event),\n          \"prefix-icon\": \"el-icon-lock\",\n          \"show-password\": \"\",\n          placeholder: \"请输入密码\"\n        }, null, 8 /* PROPS */, [\"modelValue\"])]),\n        _: 1 /* STABLE */\n      }), _createVNode(_component_el_form_item, {\n        prop: \"imgCode\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_el_row, null, {\n          default: _withCtx(() => [_createVNode(_component_el_col, {\n            span: 14\n          }, {\n            default: _withCtx(() => [_createVNode(_component_el_input, {\n              modelValue: _ctx.loginForm.imgCode,\n              \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => _ctx.loginForm.imgCode = $event),\n              \"prefix-icon\": \"el-icon-message\",\n              placeholder: \"请输入验证码\"\n            }, null, 8 /* PROPS */, [\"modelValue\"])]),\n            _: 1 /* STABLE */\n          }), _createVNode(_component_el_col, {\n            span: 9,\n            offset: 1\n          }, {\n            default: _withCtx(() => [_createVNode(_component_VueImgVerify, {\n              ref: \"verifyRef\"\n            }, null, 512 /* NEED_PATCH */)]),\n\n            _: 1 /* STABLE */\n          })]),\n\n          _: 1 /* STABLE */\n        })]),\n\n        _: 1 /* STABLE */\n      }), _createVNode(_component_el_form_item, null, {\n        default: _withCtx(() => [_createVNode(_component_el_button, {\n          type: \"text\"\n        }, {\n          default: _withCtx(() => [_createTextVNode(\"忘记密码？\")]),\n          _: 1 /* STABLE */\n        })]),\n\n        _: 1 /* STABLE */\n      }), _createVNode(_component_el_form_item, {\n        class: \"login-body-button\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_el_button, {\n          class: \"login-submit\",\n          type: \"danger\",\n          round: \"\",\n          onClick: $setup.submit\n        }, {\n          default: _withCtx(() => [_createTextVNode(\"登录\")]),\n          _: 1 /* STABLE */\n        }, 8 /* PROPS */, [\"onClick\"])]),\n        _: 1 /* STABLE */\n      })]),\n\n      _: 1 /* STABLE */\n    }, 8 /* PROPS */, [\"model\", \"rules\"])]),\n    _: 1 /* STABLE */\n  })], 4 /* STYLE */);\n}","map":{"version":3,"mappings":";;;;;;;;;;uBACEA,oBAmDM;IAnDDC,KAAK,EAAC,OAAO;IAAEC,KAAK,kBAAEC,UAAK;MAC9BC,aAiDSC;IAjDAC,MAAM,EAAE,EAAE;IAAEL,KAAK,EAAC;;sBACzB,MA+CU,CA/CVG,aA+CUG;MA9CPC,KAAK,EAAEL,cAAS;MAChBM,KAAK,EAAEC,YAAK;MACbC,GAAG,EAAC,cAAc;MAClB,aAAW,EAAC,KAAK;MACjBV,KAAK,EAAC,YAAY;MAClB,wBAAsB,EAAC;;wBAEvB,MAAuD,CAAvDG,aAAuDQ;QAA7CX,KAAK,EAAC,YAAY;QAAEY,GAAG,EAAEV;wCACnCC,aAMeU;QANDC,IAAI,EAAC;MAAU;0BAC3B,MAIY,CAJZX,aAIYY;sBAHDb,cAAS,CAACc,QAAQ;qEAAlBd,cAAS,CAACc,QAAQ;UAC3B,aAAW,EAAC,cAAc;UAC1BC,WAAW,EAAC;;;UAGhBd,aAQeU;QARDC,IAAI,EAAC;MAAU;0BAC3B,MAMY,CANZX,aAMYY;UALVG,IAAI,EAAC,UAAU;sBACNhB,cAAS,CAACiB,QAAQ;qEAAlBjB,cAAS,CAACiB,QAAQ;UAC3B,aAAW,EAAC,cAAc;UAC1B,eAAa,EAAb,EAAa;UACbF,WAAW,EAAC;;;UAGhBd,aAaeU;QAbDC,IAAI,EAAC;MAAS;0BAC1B,MAWS,CAXTX,aAWSC;4BAVP,MAMS,CANTD,aAMSiB;YANAC,IAAI,EAAE;UAAE;8BACf,MAIY,CAJZlB,aAIYY;0BAHDb,cAAS,CAACoB,OAAO;yEAAjBpB,cAAS,CAACoB,OAAO;cAC1B,aAAW,EAAC,iBAAiB;cAC7BL,WAAW,EAAC;;;cAGhBd,aAESiB;YAFAC,IAAI,EAAE,CAAC;YAAGE,MAAM,EAAE;;8BACzB,MAA6C,CAA7CpB,aAA6CqB;cAA/Bd,GAAG,EAAC;YAAW;;;;;;;;;UAInCP,aAEeU;0BADb,MAAwC,CAAxCV,aAAwCsB;UAA7BP,IAAI,EAAC;QAAM;4BAAC,MAAK,kBAAL,OAAK;;;;;UAE9Bf,aAIeU;QAJDb,KAAK,EAAC;MAAmB;0BACrC,MAEC,CAFDG,aAECsB;UAFUzB,KAAK,EAAC,cAAc;UAACkB,IAAI,EAAC,QAAQ;UAACQ,KAAK,EAAL,EAAK;UAAEC,OAAK,EAAElB;;4BACzD,MAAE,kBAAF,IAAE","names":["_createElementBlock","class","style","_ctx","_createVNode","_component_el_row","gutter","_component_el_form","model","rules","$setup","ref","_component_el_image","src","_component_el_form_item","prop","_component_el_input","username","placeholder","type","password","_component_el_col","span","imgCode","offset","_component_VueImgVerify","_component_el_button","round","onClick"],"sourceRoot":"","sources":["E:\\课程\\大三上\\软件工程管理\\Code\\G05-Project\\front\\src\\views\\LoginView.vue"],"sourcesContent":["<template>\r\n  <div class=\"login\" :style=\"login\">\r\n    <el-row :gutter=\"10\" class=\"login-container\">\r\n      <el-form\r\n        :model=\"loginForm\"\r\n        :rules=\"rules\"\r\n        ref=\"validateForm\"\r\n        label-width=\"1em\"\r\n        class=\"login-body\"\r\n        hide-required-asterisk=\"false\"\r\n      >\r\n        <el-image class=\"login-logo\" :src=\"logoImg\"></el-image>\r\n        <el-form-item prop=\"username\">\r\n          <el-input\r\n            v-model=\"loginForm.username\"\r\n            prefix-icon=\"el-icon-user\"\r\n            placeholder=\"请输入用户名称\"\r\n          ></el-input>\r\n        </el-form-item>\r\n        <el-form-item prop=\"password\">\r\n          <el-input\r\n            type=\"password\"\r\n            v-model=\"loginForm.password\"\r\n            prefix-icon=\"el-icon-lock\"\r\n            show-password\r\n            placeholder=\"请输入密码\"\r\n          ></el-input>\r\n        </el-form-item>\r\n        <el-form-item prop=\"imgCode\">\r\n          <el-row>\r\n            <el-col :span=\"14\">\r\n              <el-input\r\n                v-model=\"loginForm.imgCode\"\r\n                prefix-icon=\"el-icon-message\"\r\n                placeholder=\"请输入验证码\"\r\n              ></el-input>\r\n            </el-col>\r\n            <el-col :span=\"9\" :offset=\"1\">\r\n              <VueImgVerify ref=\"verifyRef\"></VueImgVerify>\r\n            </el-col>\r\n          </el-row>\r\n        </el-form-item>\r\n        <el-form-item>\r\n          <el-button type=\"text\">忘记密码？</el-button>\r\n        </el-form-item>\r\n        <el-form-item class=\"login-body-button\">\r\n          <el-button class=\"login-submit\" type=\"danger\" round @click=\"submit\"\r\n            >登录</el-button\r\n          >\r\n        </el-form-item>\r\n      </el-form>\r\n    </el-row>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { onBeforeMount, reactive, ref, toRefs, unref } from \"vue\";\r\nimport { useRouter } from \"vue-router\";\r\nimport { useStore } from \"vuex\";\r\nimport { login } from \"@/api/serviceApi\";\r\nimport { ElMessage } from \"element-plus\";\r\nimport VueImgVerify from \"@/components/VueImageVerify\";\r\n\r\nexport default {\r\n  setup() {\r\n    const router = useRouter();\r\n    const store = useStore();\r\n    const validateForm = ref(null);\r\n    const verifyRef = ref(null);\r\n    const state = reactive({\r\n      login: {\r\n        height: \"\",\r\n        backgroundImage: \"url(\" + require(\"@/assets/image/login_bj.png\") + \")\",\r\n      },\r\n      logoImg: require(\"@/assets/image/logo.png\"),\r\n      loginForm: {\r\n        username: \"\",\r\n        password: \"\",\r\n        imgCode: \"\",\r\n      },\r\n    });\r\n\r\n    const rules = {\r\n      username: [\r\n        { required: true, message: \"用户名称不能为空\", trigger: \"blur\" },\r\n      ],\r\n      password: [{ required: true, message: \"密码不能为空\", trigger: \"blur\" }],\r\n      imgCode: [{ required: true, message: \"验证码不能为空\", trigger: \"blur\" }],\r\n    };\r\n\r\n    onBeforeMount(() => {\r\n      state.login.height = document.body.clientHeight + \"px\";\r\n    });\r\n\r\n    const submit = async () => {\r\n      const form = unref(validateForm);\r\n      if (!form) {\r\n        return;\r\n      }\r\n      await form.validate();\r\n\r\n      // 校验验证码\r\n      const _imgCode = verifyRef.value.imgCode || \"\";\r\n      if (_imgCode.toLowerCase() != state.loginForm.imgCode.toLowerCase()) {\r\n        ElMessage({\r\n          showClose: true,\r\n          message: \"验证码有误，请重新输入!\",\r\n          type: \"error\",\r\n        });\r\n        return;\r\n      }\r\n\r\n      console.log(state.loginForm);\r\n\r\n      login(state.loginForm).then((res) => {\r\n        if (res.code === 200) {\r\n          // 登录成功后设置token到vuex中\r\n          localStorage.username = res.data.username;\r\n          store.commit(\"setToken\", res.data.token);\r\n          router.push({ path: \"home\" });\r\n        } else {\r\n          ElMessage({ showClose: true, message: res.data, type: \"error\" });\r\n        }\r\n      });\r\n    };\r\n\r\n    return {\r\n      ...toRefs(state),\r\n      rules,\r\n      validateForm,\r\n      verifyRef,\r\n      submit,\r\n    };\r\n  },\r\n  components: {\r\n    VueImgVerify,\r\n  },\r\n};\r\n</script>\r\n\r\n<style lang=\"less\">\r\n.login {\r\n  background-size: cover;\r\n\r\n  .login-logo {\r\n    width: 120px;\r\n    height: 120px;\r\n    display: block;\r\n    margin: 2rem auto;\r\n  }\r\n\r\n  .login-container {\r\n    position: absolute;\r\n    left: 50%;\r\n    top: 50%;\r\n    transform: translate(-50%, -50%);\r\n    background: rgba(233, 233, 233, 0.3);\r\n    border-radius: 0.4rem;\r\n    border: 1px white solid;\r\n    padding: 0.8rem;\r\n  }\r\n\r\n  .login-body {\r\n    padding: 1rem 2rem;\r\n    background: rgba(233, 233, 233, 0.6);\r\n    width: 25rem;\r\n    border-radius: 0.2rem;\r\n  }\r\n\r\n  .el-input__inner {\r\n    border-radius: 20px;\r\n  }\r\n\r\n  .codeImg {\r\n    height: 40px;\r\n  }\r\n\r\n  .login-submit {\r\n    width: 100%;\r\n  }\r\n}\r\n</style>\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}